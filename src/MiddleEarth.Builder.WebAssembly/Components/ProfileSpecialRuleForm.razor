@using MiddleEarth.Builder.Application.Domain
@if (Model != null)
{
    <EditForm Model="@Model" OnValidSubmit="@SubmitForm">
        <DataAnnotationsValidator/>
        <ValidationSummary/>
        <div class="mb-3">
            <label for="name" class="form-label m-0 me-2">Name</label>
            <InputText id="name" class="form-control me-2" @bind-Value="Model.Rule.Name"/>
        </div>
        <div class="mb-3">
            <label for="target" class="form-label m-0 me-2">Target (orc/human/etc)</label>
            <InputText id="target" class="form-control me-2" @bind-Value="Model.Target"/>
        </div>
        <div class="mb-3">
            <label for="description" class="form-label m-0 me-2">Description</label>
            <InputText id="description" class="form-control me-2" @bind-Value="Model.Rule.Description"/>
        </div>
        <button type="submit" class="btn btn-primary">Save</button>
    </EditForm>
}
else
{
    <lead>Model is not loaded correctly.</lead>
}

@code {

    [CascadingParameter]
    BlazoredModalInstance BlazoredModal { get; set; } = default!;

    [Parameter]
    public ProfileSpecialRule? Model { get; set; }

    private async Task SubmitForm() =>
        await BlazoredModal.CloseAsync(ModalResult.Ok(Model));

}